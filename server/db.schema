-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.allergies (
  allergy_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  allergen character varying,
  reaction_type character varying,
  severity character varying,
  date_identified date,
  notes text,
  recorded_by uuid,
  recorded_at timestamp without time zone,
  CONSTRAINT allergies_pkey PRIMARY KEY (allergy_id),
  CONSTRAINT allergies_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id),
  CONSTRAINT allergies_recorded_by_fkey FOREIGN KEY (recorded_by) REFERENCES public.users(user_id)
);
CREATE TABLE public.anthropometric_measurements (
  am_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  weight real,
  height real,
  head_cc real,
  chest_cc real,
  abdominal real,
  CONSTRAINT anthropometric_measurements_pkey PRIMARY KEY (am_id),
  CONSTRAINT anthropometric_measurements_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id)
);
CREATE TABLE public.appointments (
  appointment_id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  patient_id uuid NOT NULL,
  facility_id uuid NOT NULL,
  doctor_id uuid NOT NULL,
  scheduled_by uuid NOT NULL,
  appointment_date timestamp without time zone,
  status character varying,
  reason text,
  notes text,
  created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
  updated_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
  CONSTRAINT appointments_pkey PRIMARY KEY (appointment_id),
  CONSTRAINT appointments_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.users(user_id),
  CONSTRAINT appointments_facility_id_fkey FOREIGN KEY (facility_id) REFERENCES public.healthcare_facilities(facility_id),
  CONSTRAINT appointments_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id),
  CONSTRAINT appointments_scheduled_by_fkey FOREIGN KEY (scheduled_by) REFERENCES public.users(user_id)
);
CREATE TABLE public.audit_logs (
  log_id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  action_type character varying,
  table_name character varying,
  recorded_id uuid DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  action_timestamp timestamp without time zone NOT NULL,
  ip_address character varying,
  old_values jsonb NOT NULL,
  new_values jsonb NOT NULL,
  CONSTRAINT audit_logs_pkey PRIMARY KEY (log_id),
  CONSTRAINT audit_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT audit_logs_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id)
);
CREATE TABLE public.delivery_record (
  delivery_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  type_of_delivery character varying,
  APGAR_SCORE real,
  mother_bt character varying,
  father_bt character varying,
  patient_bt character varying,
  distinguishable_marks text,
  vit_k_date date,
  vit_k_loc character varying,
  hep_b_date date,
  hep_b_loc character varying,
  bcg_vax_date date,
  bcg_vax_loc character varying,
  other_medications text,
  discharge_diagnosis text,
  follow_up_visit date,
  follow_up_visit_site character varying,
  obstetrician uuid,
  pediatrician uuid,
  CONSTRAINT delivery_record_pkey PRIMARY KEY (delivery_id),
  CONSTRAINT delivery_record_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id),
  CONSTRAINT delivery_record_obstetrician_fkey FOREIGN KEY (obstetrician) REFERENCES public.users(user_id),
  CONSTRAINT delivery_record_pediatrician_fkey FOREIGN KEY (pediatrician) REFERENCES public.users(user_id)
);
CREATE TABLE public.facility_users (
  facility_id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL DEFAULT gen_random_uuid(),
  role character varying NOT NULL,
  start_date date,
  end_date date,
  CONSTRAINT facility_users_pkey PRIMARY KEY (facility_id, user_id),
  CONSTRAINT facility_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT facility_users_facility_id_fkey FOREIGN KEY (facility_id) REFERENCES public.healthcare_facilities(facility_id)
);
CREATE TABLE public.growth_milestones (
  milestone_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  milestone_type character varying NOT NULL,
  milestone_date date NOT NULL,
  description text,
  notes text,
  recorded_by uuid NOT NULL,
  recorded_at timestamp without time zone NOT NULL,
  CONSTRAINT growth_milestones_pkey PRIMARY KEY (milestone_id),
  CONSTRAINT growth_milestones_recorded_by_fkey FOREIGN KEY (recorded_by) REFERENCES public.users(user_id),
  CONSTRAINT growth_milestones_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id)
);
CREATE TABLE public.healthcare_facilities (
  facility_id uuid NOT NULL DEFAULT gen_random_uuid(),
  facility_name timestamp with time zone NOT NULL DEFAULT now(),
  address text NOT NULL,
  city character varying NOT NULL,
  zip_cide character varying NOT NULL,
  contact_number character varying NOT NULL,
  email character varying NOT NULL,
  website character varying DEFAULT 'NULL'::character varying,
  sub_status character varying DEFAULT ''::character varying,
  sub_exp date,
  created_at date,
  created_by uuid NOT NULL,
  CONSTRAINT healthcare_facilities_pkey PRIMARY KEY (facility_id),
  CONSTRAINT healthcare_facilities_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(user_id)
);
CREATE TABLE public.invite_tokens (
  inv_id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL,
  child_id uuid NOT NULL,
  token text NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  created_by uuid NOT NULL,
  consumbed_at timestamp with time zone,
  CONSTRAINT invite_tokens_pkey PRIMARY KEY (inv_id),
  CONSTRAINT invite_tokens_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(user_id),
  CONSTRAINT invite_tokens_child_id_fkey FOREIGN KEY (child_id) REFERENCES public.patients(patient_id)
);
CREATE TABLE public.medical_visits (
  visit_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  facility_id uuid NOT NULL,
  doctor_id uuid NOT NULL,
  visit_date date NOT NULL,
  visit_type text NOT NULL,
  diagnosis text,
  treatment_plan text,
  follow_up_date timestamp without time zone,
  created_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'utc'::text),
  created_by uuid NOT NULL,
  updated_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
  updated_by uuid,
  CONSTRAINT medical_visits_pkey PRIMARY KEY (visit_id),
  CONSTRAINT medical_visits_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(user_id),
  CONSTRAINT medical_visits_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.users(user_id),
  CONSTRAINT medical_visits_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id),
  CONSTRAINT medical_visits_facility_id_fkey FOREIGN KEY (facility_id) REFERENCES public.healthcare_facilities(facility_id)
);
CREATE TABLE public.parent_access (
  access_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  user_id uuid NOT NULL,
  relationship character varying,
  granted_by uuid,
  granted_at date,
  revoked_at date,
  is_active boolean NOT NULL,
  CONSTRAINT parent_access_pkey PRIMARY KEY (access_id),
  CONSTRAINT parent_access_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT parent_access_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id),
  CONSTRAINT parent_access_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES public.users(user_id)
);
CREATE TABLE public.patient_facility (
  pf_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  facility_id uuid NOT NULL UNIQUE,
  assigned_by uuid NOT NULL UNIQUE,
  assigned_at timestamp with time zone DEFAULT now(),
  notes text,
  is_active boolean DEFAULT true,
  CONSTRAINT patient_facility_pkey PRIMARY KEY (pf_id),
  CONSTRAINT patient_facility_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id),
  CONSTRAINT patient_facility_facility_id_fkey FOREIGN KEY (facility_id) REFERENCES public.healthcare_facilities(facility_id),
  CONSTRAINT patient_facility_assigned_by_fkey FOREIGN KEY (assigned_by) REFERENCES public.users(user_id)
);
CREATE TABLE public.patients (
  patient_id uuid NOT NULL DEFAULT gen_random_uuid(),
  firstname character varying NOT NULL,
  lastname character varying NOT NULL,
  date_of_birth date NOT NULL,
  gender character varying NOT NULL,
  birth_weight real,
  birth_height real,
  bloodtype character varying,
  gestation_weeks smallint,
  created_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'utc'::text),
  updated_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
  is_active boolean NOT NULL DEFAULT true,
  CONSTRAINT patients_pkey PRIMARY KEY (patient_id)
);
CREATE TABLE public.qr_codes (
  qr_id uuid NOT NULL DEFAULT gen_random_uuid(),
  reference_type character varying NOT NULL,
  reference_id uuid DEFAULT gen_random_uuid(),
  generated_by uuid,
  generated_at timestamp without time zone,
  expires_at timestamp without time zone,
  access_count integer,
  last_accessed_at timestamp without time zone,
  is_active boolean,
  CONSTRAINT qr_codes_pkey PRIMARY KEY (qr_id),
  CONSTRAINT qr_codes_generated_by_fkey FOREIGN KEY (generated_by) REFERENCES public.users(user_id)
);
CREATE TABLE public.screening_tests (
  st_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  ens_date date,
  ens_remarks boolean,
  nhs_date date,
  nhs_r_ear boolean,
  nhs_l_ear boolean,
  pos_date date,
  pos_for_cchd_r boolean,
  pos_for_cchd_l boolean,
  ror_date date,
  ror_remakrs character varying,
  created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
  CONSTRAINT screening_tests_pkey PRIMARY KEY (st_id),
  CONSTRAINT screening_tests_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id)
);
CREATE TABLE public.users (
  user_id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL UNIQUE,
  password text NOT NULL,
  firstname character varying NOT NULL,
  lastname character varying NOT NULL,
  role character varying NOT NULL,
  specialty character varying,
  license_number character varying,
  phone_number character varying,
  created_at timestamp without time zone NOT NULL DEFAULT now(),
  updated_at timestamp without time zone NOT NULL DEFAULT now(),
  is_active boolean DEFAULT false,
  is_subscribed boolean,
  CONSTRAINT users_pkey PRIMARY KEY (user_id),
  CONSTRAINT USERS_USER_ID_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.vaccinations (
  vax_id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  visit_id uuid,
  vax_name character varying,
  dose_number smallint,
  administered_date timestamp without time zone,
  administered_by uuid,
  manufacturer character varying,
  lot_number character varying,
  administration_site character varying,
  next_dose_due date,
  notes text,
  recorded_at date,
  CONSTRAINT vaccinations_pkey PRIMARY KEY (vax_id),
  CONSTRAINT vaccinations_visit_id_fkey FOREIGN KEY (visit_id) REFERENCES public.medical_visits(visit_id),
  CONSTRAINT vaccinations_administered_by_fkey FOREIGN KEY (administered_by) REFERENCES public.users(user_id),
  CONSTRAINT vaccinations_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patients(patient_id)
);